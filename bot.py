from telegram import Update, Bot
from telegram.ext import CommandHandler, Application, MessageHandler, filters, ContextTypes
import json
import os

# –Ü–º'—è —Ñ–∞–π–ª—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É
PROGRESS_FILE = "progress.json"

# –°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —ñ —ó—Ö –∑–∞–≤–¥–∞–Ω–Ω—è
users = {
    "@anwesxx": {"name": "–ê–Ω–Ω–∞", "tasks": []},
    "@Undertaker_A": {"name": "–ú–∏—Ö–∞–π–ª–æ", "tasks": []},
    "@Konnerpo": {"name": "–ê—Ä—Ç–µ–º", "tasks": []},
    "@chaos_queen_fs": {"name": "–ú–æ–Ω–æ—Ä–æ—á–∫–∞", "tasks": []},
    "@Lyoha221": {"name": "–õ—å–æ—Ö–∞", "tasks": []},
    "@PeachBombastic": {"name": "Peach", "tasks": []},
    "@Kvas_Enjoyer": {"name": "–ö–≤–∞—Å–æ–≤–∏–π –ø–æ—Ü—ñ–Ω–æ–≤—É–≤–∞—á", "tasks": []},
    "@HOMYARCHOK": {"name": "–•–æ–º'—è–∫", "tasks": []},
    "@lilTitanlil": {"name": "–ú–∞–ª–∏–π –¢–∏—Ç–∞–Ω", "tasks": []},
    "@Crysun": {"name": "–ö—Ä—ñ—Å", "tasks": []},
    "@is_mlbb": {"name": "–û–ª–µ–≥", "tasks": []}
}

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–≥—Ä–µ—Å—É
def load_progress():
    if os.path.exists(PROGRESS_FILE):
        with open(PROGRESS_FILE, "r") as f:
            return json.load(f)
    return {user: {"tasks_completed": []} for user in users}

def save_progress(progress):
    with open(PROGRESS_FILE, "w") as f:
        json.dump(progress, f)

progress = load_progress()

# –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = f"@{update.message.from_user.username}"
    if user_id in users:
        welcome_message = f"–ü—Ä–∏–≤—ñ—Ç, {users[user_id]['name']}! –î—è–∫—É—é –∑–∞ –¥–æ–ø–æ–º–æ–≥—É! üòä\n" \
                          f"–í–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî –∑—Ä–æ–±–∏—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –æ–±—Ä–∞–Ω–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤. –©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏, —è–∫—ñ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏, " \
                          f"–≤–≤–µ–¥—ñ—Ç—å /tasks."
        await update.message.reply_text(welcome_message)
    else:
        await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –í–∏ –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ –≤ —Å–ø–∏—Å–∫—É —É—á–∞—Å–Ω–∏–∫—ñ–≤, –∞–ª–µ –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏!")

# –ü–æ–∫–∞–∑ –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async def tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = f"@{update.message.from_user.username}"
    if user_id in users:
        tasks_needed = [task for task in users[user_id]["tasks"] if task not in progress[user_id]["tasks_completed"]]
        task_list = "\n".join(tasks_needed) if tasks_needed else "–£—Å—ñ —Å–∫—Ä—ñ–Ω—à–æ—Ç–∏ –≤–∂–µ –¥–æ–¥–∞–Ω—ñ. –î—è–∫—É—î–º–æ!"
        await update.message.reply_text(f"–í–∞—à—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:\n{task_list}")
    else:
        await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å.")

# –û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ–≤
async def add_screenshot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = f"@{update.message.from_user.username}"
    if user_id in users:
        if update.message.photo:
            # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —Ñ–æ—Ç–æ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            photo_file = await update.message.photo[-1].get_file()
            filename = f"{user_id}_{len(progress[user_id]['tasks_completed']) + 1}.jpg"
            photo_file.download(filename)

            # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É
            progress[user_id]["tasks_completed"].append(filename)
            save_progress(progress)

            await update.message.reply_text("–°–∫—Ä—ñ–Ω—à–æ—Ç –æ—Ç—Ä–∏–º–∞–Ω–æ! –î—è–∫—É—é –∑–∞ –¥–æ–ø–æ–º–æ–≥—É!")
        else:
            await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.")
    else:
        await update.message.reply_text("–í–∏ –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ –≤ —Å–ø–∏—Å–∫—É —É—á–∞—Å–Ω–∏–∫—ñ–≤.")

def main():
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É –±–æ—Ç–∞
    application = Application.builder().token(os.getenv("TELEGRAM_BOT_TOKEN")).build()

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("tasks", tasks))
    application.add_handler(MessageHandler(filters.PHOTO, add_screenshot))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
